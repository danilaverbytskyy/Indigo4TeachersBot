import telebot
from config import Config
from bot.core.database import init_db
from bot.handlers.common import register_common_handlers
import threading
import requests
import time
import os
from flask import Flask

app = Flask(__name__)


@app.route('/')
def home():
    return "ü§ñ Telegram Bot is running! ‚úÖ"


@app.route('/ping')
def ping():
    return "Pong!"


def run_web_server():
    app.run(host='0.0.0.0', port=8080)


def keep_alive():
    """–î–≤–æ–π–Ω–∞—è –∑–∞—â–∏—Ç–∞ –æ—Ç —Å–Ω–∞: UptimeRobot + –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –ø–∏–Ω–≥"""
    while True:
        try:
            # 1. –ü–∏–Ω–≥ —á–µ—Ä–µ–∑ UptimeRobot
            public_url = f"https://{os.environ.get('REPL_SLUG')}.{os.environ.get('REPL_OWNER')}.repl.co"
            requests.get(public_url, timeout=5)

            # 2. –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –ø–∏–Ω–≥ (–Ω–µ —Ç—Ä–µ–±—É–µ—Ç DNS)
            requests.get("http://localhost:8080/ping", timeout=5)

            print("Keep-alive ping successful")
        except Exception as e:
            print(f"Keep-alive error: {e}")

        # –ü–∏–Ω–≥—É–µ–º –∫–∞–∂–¥—ã–µ 3 –º–∏–Ω—É—Ç—ã (–º–µ–Ω—å—à–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª —Å–Ω–∞ Replit)
        time.sleep(180)


def main():
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    config = Config()
    bot = telebot.TeleBot(config.BOT_TOKEN)

    # –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
    init_db()

    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    register_common_handlers(bot, config)
    # ... –¥—Ä—É–≥–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏

    # # –ó–∞–ø—É—Å–∫–∞–µ–º –≤–µ–±-—Å–µ—Ä–≤–µ—Ä
    # web_thread = threading.Thread(target=run_web_server, daemon=True)
    # web_thread.start()
    # print("Web server started on port 8080")
    #
    # # –î–∞–µ–º –≤—Ä–µ–º—è —Å–µ—Ä–≤–µ—Ä—É –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è
    # time.sleep(2)
    #
    # # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏—Å—Ç–µ–º—É –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    # keep_alive_thread = threading.Thread(target=keep_alive, daemon=True)
    # keep_alive_thread.start()
    # print("Keep-alive service started")

    print('Bot is successfully running ‚úÖ')
    bot.infinity_polling()


if __name__ == "__main__":
    # –î–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã –≤ Replit
    os.environ['FLASK_ENV'] = 'production'

    main()